// <auto-generated />
using Day1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20251008113654_seedingData")]
    partial class seedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Day1.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("degree")
                        .HasColumnType("int");

                    b.Property<int>("minDegree")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentID = 1,
                            Hours = 15,
                            Name = "C#",
                            degree = 100,
                            minDegree = 50
                        },
                        new
                        {
                            Id = 2,
                            DepartmentID = 2,
                            Hours = 16,
                            Name = "JS",
                            degree = 100,
                            minDegree = 50
                        });
                });

            modelBuilder.Entity("Day1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Ahmed",
                            Name = "CS"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Ali",
                            Name = "IS"
                        },
                        new
                        {
                            Id = 3,
                            Manager = "Amr",
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("Day1.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Instructor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Assiut",
                            CourseID = 1,
                            DepartmentID = 1,
                            Img = "m.png",
                            Name = "Ahmed",
                            Salary = 8000
                        },
                        new
                        {
                            Id = 2,
                            Address = "Assiut",
                            CourseID = 2,
                            DepartmentID = 2,
                            Img = "m.png",
                            Name = "Ali",
                            Salary = 10000
                        },
                        new
                        {
                            Id = 3,
                            Address = "Cairo",
                            CourseID = 1,
                            DepartmentID = 1,
                            Img = "m.png",
                            Name = "Amr",
                            Salary = 20000
                        },
                        new
                        {
                            Id = 4,
                            Address = "Assiut",
                            CourseID = 2,
                            DepartmentID = 2,
                            Img = "m.png",
                            Name = "Sayed",
                            Salary = 7000
                        });
                });

            modelBuilder.Entity("Day1.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Trainee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Assiut",
                            DepartmentID = 1,
                            Image = "m.png",
                            Name = "Ali",
                            grade = 78
                        },
                        new
                        {
                            Id = 2,
                            Address = "Assiut",
                            DepartmentID = 2,
                            Image = "m.png",
                            Name = "Ahmed",
                            grade = 98
                        },
                        new
                        {
                            Id = 3,
                            Address = "Assiut",
                            DepartmentID = 3,
                            Image = "m.png",
                            Name = "Amr",
                            grade = 50
                        });
                });

            modelBuilder.Entity("Day1.Models.crsResult", b =>
                {
                    b.Property<int>("TraineeID")
                        .HasColumnType("int");

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.HasKey("TraineeID", "CourseID");

                    b.HasIndex("CourseID");

                    b.ToTable("CrsResult");
                });

            modelBuilder.Entity("Day1.Models.Course", b =>
                {
                    b.HasOne("Day1.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day1.Models.Instructor", b =>
                {
                    b.HasOne("Day1.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Day1.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day1.Models.Trainee", b =>
                {
                    b.HasOne("Day1.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Day1.Models.crsResult", b =>
                {
                    b.HasOne("Day1.Models.Course", "Course")
                        .WithMany("CrsResult")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Day1.Models.Trainee", "Trainee")
                        .WithMany("CrsResult")
                        .HasForeignKey("TraineeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("Day1.Models.Course", b =>
                {
                    b.Navigation("CrsResult");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("Day1.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("Day1.Models.Trainee", b =>
                {
                    b.Navigation("CrsResult");
                });
#pragma warning restore 612, 618
        }
    }
}
